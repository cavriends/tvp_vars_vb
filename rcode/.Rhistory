msfe_bvar_minnesota <- bvar_minnesota(T, M, p, train, y_dgp, x_dgp, mcmc_iter, h_steps)
msd_bvar_minnesota <- bvar_minnesota_msd(T, M, p, y_dgp, mcmc_iter, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_bvar_minnesota$msfe)),4), " | ALPL: ", round(mean(unlist(msfe_bvar_minnesota$alpl)))," | MSD: ", round(msd_bvar_minnesota,6), "\n", sep=""))
bvar_result = list("msfe" = msfe_bvar_minnesota,
"msd" = msd_bvar_minnesota)
}, error = function(err) {
bvar_result = invalid_result(model="bvar_minnesota", h_steps)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> ERROR!"))
}, warning = function(war) {
bvar_result = list("msfe" = msfe_bvar_minnesota,
"msd" = msd_bvar_minnesota)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> WARNING! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_bvar_minnesota$msfe)),4), " | ALPL: ", round(mean(unlist(msfe_bvar_minnesota$alpl)))," | MSD: ", round(msd_bvar_minnesota,6), "\n", sep=""))
})
M = 2
bvar_result = tryCatch({## B-VAR with Minnesota prior ##
start_time = proc.time()
msfe_bvar_minnesota <- bvar_minnesota(T, M, p, train, y_dgp, x_dgp, mcmc_iter, h_steps)
msd_bvar_minnesota <- bvar_minnesota_msd(T, M, p, y_dgp, mcmc_iter, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_bvar_minnesota$msfe)),4), " | ALPL: ", round(mean(unlist(msfe_bvar_minnesota$alpl)))," | MSD: ", round(msd_bvar_minnesota,6), "\n", sep=""))
bvar_result = list("msfe" = msfe_bvar_minnesota,
"msd" = msd_bvar_minnesota)
}, error = function(err) {
bvar_result = invalid_result(model="bvar_minnesota", h_steps)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> ERROR!"))
}, warning = function(war) {
bvar_result = list("msfe" = msfe_bvar_minnesota,
"msd" = msd_bvar_minnesota)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> WARNING! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_bvar_minnesota$msfe)),4), " | ALPL: ", round(mean(unlist(msfe_bvar_minnesota$alpl)))," | MSD: ", round(msd_bvar_minnesota,6), "\n", sep=""))
})
bvar_result = tryCatch({## B-VAR with Minnesota prior ##
start_time = proc.time()
msfe_bvar_minnesota <- bvar_minnesota(T, M, p, train, y_dgp, x_dgp, mcmc_iter, h_steps)
msd_bvar_minnesota <- bvar_minnesota_msd(T, M, p, y_dgp, mcmc_iter, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_bvar_minnesota$msfe)),4), " | ALPL: ", round(mean(unlist(msfe_bvar_minnesota$alpl)))," | MSD: ", round(msd_bvar_minnesota,6), "\n", sep=""))
bvar_result = list("msfe" = msfe_bvar_minnesota,
"msd" = msd_bvar_minnesota)
}, warning = function(war) {
bvar_result = list("msfe" = msfe_bvar_minnesota,
"msd" = msd_bvar_minnesota)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> WARNING! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_bvar_minnesota$msfe)),4), " | ALPL: ", round(mean(unlist(msfe_bvar_minnesota$alpl)))," | MSD: ", round(msd_bvar_minnesota,6), "\n", sep=""))
}, error = function(err) {
bvar_result = invalid_result(model="bvar_minnesota", h_steps)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> ERROR!"))
})
M = 5
bvar_result = tryCatch({## B-VAR with Minnesota prior ##
start_time = proc.time()
msfe_bvar_minnesota <- bvar_minnesota(T, M, p, train, y_dgp, x_dgp, mcmc_iter, h_steps)
msd_bvar_minnesota <- bvar_minnesota_msd(T, M, p, y_dgp, mcmc_iter, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_bvar_minnesota$msfe)),4), " | ALPL: ", round(mean(unlist(msfe_bvar_minnesota$alpl)))," | MSD: ", round(msd_bvar_minnesota,6), "\n", sep=""))
bvar_result = list("msfe" = msfe_bvar_minnesota,
"msd" = msd_bvar_minnesota)
}, warning = function(war) {
bvar_result = list("msfe" = msfe_bvar_minnesota,
"msd" = msd_bvar_minnesota)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> WARNING! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_bvar_minnesota$msfe)),4), " | ALPL: ", round(mean(unlist(msfe_bvar_minnesota$alpl)))," | MSD: ", round(msd_bvar_minnesota,6), "\n", sep=""))
}, error = function(err) {
bvar_result = invalid_result(model="bvar_minnesota", h_steps)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> ERROR!"))
})
run = 120
bvar_result = tryCatch({## B-VAR with Minnesota prior ##
start_time = proc.time()
msfe_bvar_minnesota <- bvar_minnesota(T, M, p, train, y_dgp, x_dgp, mcmc_iter, h_steps)
msd_bvar_minnesota <- bvar_minnesota_msd(T, M, p, y_dgp, mcmc_iter, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_bvar_minnesota$msfe)),4), " | ALPL: ", round(mean(unlist(msfe_bvar_minnesota$alpl)))," | MSD: ", round(msd_bvar_minnesota,6), "\n", sep=""))
bvar_result = list("msfe" = msfe_bvar_minnesota,
"msd" = msd_bvar_minnesota)
}, warning = function(war) {
bvar_result = list("msfe" = msfe_bvar_minnesota,
"msd" = msd_bvar_minnesota)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> WARNING! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_bvar_minnesota$msfe)),4), " | ALPL: ", round(mean(unlist(msfe_bvar_minnesota$alpl)))," | MSD: ", round(msd_bvar_minnesota,6), "\n", sep=""))
}, error = function(err) {
bvar_result = invalid_result(model="bvar_minnesota", h_steps)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> ERROR!"))
})
start_time = proc.time()
msfe_bvar_minnesota <- bvar_minnesota(T, M, p, train, y_dgp, x_dgp, mcmc_iter, h_steps)
msd_bvar_minnesota <- bvar_minnesota_msd(T, M, p, y_dgp, mcmc_iter, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_bvar_minnesota$msfe)),4), " | ALPL: ", round(mean(unlist(msfe_bvar_minnesota$alpl)))," | MSD: ", round(msd_bvar_minnesota,6), "\n", sep=""))
bvar_result = list("msfe" = msfe_bvar_minnesota,
"msd" = msd_bvar_minnesota)
T = 200
train <- T+1-50
number_of_predictions <- T - train
h_steps <- 8
p <- 1
y_dgp <- read.csv(paste("../simulations/datasets/",paste('y',M,T,p,run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
x_dgp <- read.csv(paste("../simulations/datasets/",paste('x',M,T,p,run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
coeff <- read.csv(paste("../simulations/datasets/",paste('coefficients',M,T,p,run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
start_time = proc.time()
msfe_bvar_minnesota <- bvar_minnesota(T, M, p, train, y_dgp, x_dgp, mcmc_iter, h_steps)
msd_bvar_minnesota <- bvar_minnesota_msd(T, M, p, y_dgp, mcmc_iter, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_bvar_minnesota$msfe)),4), " | ALPL: ", round(mean(unlist(msfe_bvar_minnesota$alpl)))," | MSD: ", round(msd_bvar_minnesota,6), "\n", sep=""))
bvar_result = list("msfe" = msfe_bvar_minnesota,
"msd" = msd_bvar_minnesota)
M = 10
T = 200
train <- T+1-50
number_of_predictions <- T - train
h_steps <- 8
p <- 1
y_dgp <- read.csv(paste("../simulations/datasets/",paste('y',M,T,p,run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
x_dgp <- read.csv(paste("../simulations/datasets/",paste('x',M,T,p,run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
coeff <- read.csv(paste("../simulations/datasets/",paste('coefficients',M,T,p,run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
start_time = proc.time()
msfe_bvar_minnesota <- bvar_minnesota(T, M, p, train, y_dgp, x_dgp, mcmc_iter, h_steps)
msd_bvar_minnesota <- bvar_minnesota_msd(T, M, p, y_dgp, mcmc_iter, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_bvar_minnesota$msfe)),4), " | ALPL: ", round(mean(unlist(msfe_bvar_minnesota$alpl)))," | MSD: ", round(msd_bvar_minnesota,6), "\n", sep=""))
bvar_result = list("msfe" = msfe_bvar_minnesota,
"msd" = msd_bvar_minnesota)
start_time = proc.time()
msfe_bvar_minnesota <- bvar_minnesota(T, M, p, train, y_dgp, x_dgp, mcmc_iter, h_steps)
msd_bvar_minnesota <- bvar_minnesota_msd(T, M, p, y_dgp, mcmc_iter, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_bvar_minnesota$msfe)),4), " | ALPL: ", round(mean(unlist(msfe_bvar_minnesota$alpl)))," | MSD: ", round(msd_bvar_minnesota,6), "\n", sep=""))
bvar_result = list("msfe" = msfe_bvar_minnesota,
"msd" = msd_bvar_minnesota)
bvar_result = tryCatch({## B-VAR with Minnesota prior ##
start_time = proc.time()
msfe_bvar_minnesota <- bvar_minnesota(T, M, p, train, y_dgp, x_dgp, mcmc_iter, h_steps)
msd_bvar_minnesota <- bvar_minnesota_msd(T, M, p, y_dgp, mcmc_iter, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_bvar_minnesota$msfe)),4), " | ALPL: ", round(mean(unlist(msfe_bvar_minnesota$alpl)))," | MSD: ", round(msd_bvar_minnesota,6), "\n", sep=""))
bvar_result = list("msfe" = msfe_bvar_minnesota,
"msd" = msd_bvar_minnesota)
}, warning = function(war) {
bvar_result = list("msfe" = msfe_bvar_minnesota,
"msd" = msd_bvar_minnesota)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> WARNING! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_bvar_minnesota$msfe)),4), " | ALPL: ", round(mean(unlist(msfe_bvar_minnesota$alpl)))," | MSD: ", round(msd_bvar_minnesota,6), "\n", sep=""))
}, error = function(err) {
bvar_result = invalid_result(model="bvar_minnesota", h_steps)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> ERROR!"))
})
M = 5
T = 200
train <- T+1-50
number_of_predictions <- T - train
h_steps <- 8
p <- 1
y_dgp <- read.csv(paste("../simulations/datasets/",paste('y',M,T,p,run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
x_dgp <- read.csv(paste("../simulations/datasets/",paste('x',M,T,p,run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
coeff <- read.csv(paste("../simulations/datasets/",paste('coefficients',M,T,p,run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
bvar_result = tryCatch({## B-VAR with Minnesota prior ##
start_time = proc.time()
msfe_bvar_minnesota <- bvar_minnesota(T, M, p, train, y_dgp, x_dgp, mcmc_iter, h_steps)
msd_bvar_minnesota <- bvar_minnesota_msd(T, M, p, y_dgp, mcmc_iter, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_bvar_minnesota$msfe)),4), " | ALPL: ", round(mean(unlist(msfe_bvar_minnesota$alpl)))," | MSD: ", round(msd_bvar_minnesota,6), "\n", sep=""))
bvar_result = list("msfe" = msfe_bvar_minnesota,
"msd" = msd_bvar_minnesota)
}, error = function(err) {
bvar_result = invalid_result(model="bvar_minnesota", h_steps)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> ERROR!"))
})
bvar_result
bvar_result = tryCatch({## B-VAR with Minnesota prior ##
start_time = proc.time()
msfe_bvar_minnesota <- bvar_minnesota(T, M, p, train, y_dgp, x_dgp, mcmc_iter, h_steps)
msd_bvar_minnesota <- bvar_minnesota_msd(T, M, p, y_dgp, mcmc_iter, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_bvar_minnesota$msfe)),4), " | ALPL: ", round(mean(unlist(msfe_bvar_minnesota$alpl)))," | MSD: ", round(msd_bvar_minnesota,6), "\n", sep=""))
bvar_result = list("msfe_bvar_minnesota" = msfe_bvar_minnesota,
"msd_bvar_minnesota" = msd_bvar_minnesota)
}, error = function(err) {
bvar_result = invalid_result(model="bvar_minnesota", h_steps)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> ERROR!"))
})
var_result <- tryCatch({## VAR-OLS ##
start_time = proc.time()
msfe_var_ols <- var_ols(T, M, p, train, y_dgp, h_steps)
msd_var_ols <- var_ols_msd(T, M, p, y_dgp, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","VAR -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_var_ols$msfe)),4)," | ALPL: ", round(mean(unlist(msfe_var_ols$alpl))), " | MSD: ", round(msd_var_ols,6), "\n", sep=""))
var_result = list("msfe_var_ols" = msfe_var_ols,
"msd_var_ols" = msd_var_ols)
}, error = function(err) {
var_result = invalid_result(model="var_ols", h_steps)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","VAR -> ERROR!" ))
})
var_result$msfe_var_ols$msfe
simulation_run <- function(run, M, mcmc_iter) {
T = 200
train <- T+1-50
number_of_predictions <- T - train
h_steps <- 8
p <- 1
y_dgp <- read.csv(paste("../simulations/datasets/",paste('y',M,T,p,run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
x_dgp <- read.csv(paste("../simulations/datasets/",paste('x',M,T,p,run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
coeff <- read.csv(paste("../simulations/datasets/",paste('coefficients',M,T,p,run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
# Minimal error handling is necessary due to possible initialization failures for priors in the Bayesian models. OLS based models shouldn't error out.
# However, as a precaution and in the name of consistency, error handling is also set up for these models.
var_result <- tryCatch({
## VAR-OLS ##
start_time = proc.time()
msfe_var_ols <- var_ols(T, M, p, train, y_dgp, h_steps)
msd_var_ols <- var_ols_msd(T, M, p, y_dgp, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","VAR -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_var_ols$msfe)),4)," | ALPL: ", round(mean(unlist(msfe_var_ols$alpl))), " | MSD: ", round(msd_var_ols,6), "\n", sep=""))
var_result = list("msfe_var_ols" = msfe_var_ols,
"msd_var_ols" = msd_var_ols)
}, error = function(err) {
var_result = invalid_result(model="var_ols", h_steps)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","VAR -> ERROR!" ))
})
bvar_result = tryCatch({
## B-VAR with Minnesota prior ##
start_time = proc.time()
msfe_bvar_minnesota <- bvar_minnesota(T, M, p, train, y_dgp, x_dgp, mcmc_iter, h_steps)
msd_bvar_minnesota <- bvar_minnesota_msd(T, M, p, y_dgp, mcmc_iter, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_bvar_minnesota$msfe)),4), " | ALPL: ", round(mean(unlist(msfe_bvar_minnesota$alpl)))," | MSD: ", round(msd_bvar_minnesota,6), "\n", sep=""))
bvar_result = list("msfe_bvar_minnesota" = msfe_bvar_minnesota,
"msd_bvar_minnesota" = msd_bvar_minnesota)
}, error = function(err) {
bvar_result = invalid_result(model="bvar_minnesota", h_steps)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> ERROR!"))
})
arx_result = tryCatch({
## ARX with OLS ##
start_time = proc.time()
msfe_arx_ols <- arx_ols(T, M, p, train, y_dgp, x_dgp, h_steps)
msd_arx_ols <- arx_ols_msd(T, M, p, y_dgp, x_dgp, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","AR-X -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_arx_ols$msfe)),4)," | ALPL: ", round(mean(unlist(msfe_arx_ols$alpl))), " | MSD: ", round(msd_arx_ols,6), "\n", sep=""))
arx_result = list("msfe_arx_ols" = msfe_arx_ols,
"msd_arx_ols" = msd_arx_ols)
}, error = function(err) {
arx_result = invalid_result(model="arx_ols", h_steps)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","AR-X -> ERROR!"))
})
tvp_bar_result = tryCatch({
## TVP-B-AR with Minnesota prior ##
start_time = proc.time()
msfe_tvp_bar <- tvp_bar(T, M, p, train, y_dgp, x_dgp, mcmc_iter, h_steps)
msd_tvp_bar <- tvp_bar_msd(T, M, p, y_dgp, x_dgp, mcmc_iter, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","TVP-B-AR -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_tvp_bar$msfe)),4)," | ALPL: ", round(mean(unlist(msfe_tvp_bar$alpl))), " | MSD: ", round(msd_tvp_bar,6), "\n", sep=""))
tvp_bar_result = list("msfe_tvp_bar" = msfe_tvp_bar,
"msd_tvp_bar" = msd_tvp_bar)
}, error = function(err) {
tvp_bar_result = invalid_result(model="tvp_bar", h_steps)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","TVP-B-AR -> ERROR!"))
})
result_list <- list("msfe_var_ols" = var_result$msfe_var_ols$msfe,
"alpl_var_ols" = var_result$msfe_var_ols$alpl,
"msfe_bvar_minnesota" = bvar_result$msfe_bvar_minnesota$msfe,
"alpl_bvar_minnesota" = bvar_result$msfe_bvar_minnesota$alpl,
"msfe_arx_ols" = arx_result$msfe_arx_ols$msfe,
"alpl_arx_ols" = arx_result$msfe_arx_ols$alpl,
"msfe_tvp_bar" = tvp_bar_result$msfe_tvp_bar$msfe,
"alpl_tvp_bar" = tvp_bar$result$msfe_tvp_bar$alpl,
"msd_var_ols" = var_result$msd_var_ols,
"msd_bvar_minnesota" = bvar_result$msd_bvar_minnesota,
"msd_arx_ols" = arx_result$msd_arx_ols,
"msd_tvp_bar" = tvp_bar_result$msd_tvp_bar)
return(result_list)
}
M = 5
run = 4
## B-VAR with Minnesota prior ##
start_time = proc.time()
msfe_bvar_minnesota <- bvar_minnesota(T, M, p, train, y_dgp, x_dgp, mcmc_iter, h_steps)
msd_bvar_minnesota <- bvar_minnesota_msd(T, M, p, y_dgp, mcmc_iter, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_bvar_minnesota$msfe)),4), " | ALPL: ", round(mean(unlist(msfe_bvar_minnesota$alpl)))," | MSD: ", round(msd_bvar_minnesota,6), "\n", sep=""))
bvar_result = list("msfe_bvar_minnesota" = msfe_bvar_minnesota,
"msd_bvar_minnesota" = msd_bvar_minnesota)
T = 200
train <- T+1-50
number_of_predictions <- T - train
h_steps <- 8
p <- 1
y_dgp <- read.csv(paste("../simulations/datasets/",paste('y',M,T,p,run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
x_dgp <- read.csv(paste("../simulations/datasets/",paste('x',M,T,p,run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
coeff <- read.csv(paste("../simulations/datasets/",paste('coefficients',M,T,p,run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
## B-VAR with Minnesota prior ##
start_time = proc.time()
msfe_bvar_minnesota <- bvar_minnesota(T, M, p, train, y_dgp, x_dgp, mcmc_iter, h_steps)
msd_bvar_minnesota <- bvar_minnesota_msd(T, M, p, y_dgp, mcmc_iter, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_bvar_minnesota$msfe)),4), " | ALPL: ", round(mean(unlist(msfe_bvar_minnesota$alpl)))," | MSD: ", round(msd_bvar_minnesota,6), "\n", sep=""))
bvar_result = list("msfe_bvar_minnesota" = msfe_bvar_minnesota,
"msd_bvar_minnesota" = msd_bvar_minnesota)
run = 3
T = 200
train <- T+1-50
number_of_predictions <- T - train
h_steps <- 8
p <- 1
y_dgp <- read.csv(paste("../simulations/datasets/",paste('y',M,T,p,run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
x_dgp <- read.csv(paste("../simulations/datasets/",paste('x',M,T,p,run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
coeff <- read.csv(paste("../simulations/datasets/",paste('coefficients',M,T,p,run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
## B-VAR with Minnesota prior ##
start_time = proc.time()
msfe_bvar_minnesota <- bvar_minnesota(T, M, p, train, y_dgp, x_dgp, mcmc_iter, h_steps)
msd_bvar_minnesota <- bvar_minnesota_msd(T, M, p, y_dgp, mcmc_iter, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_bvar_minnesota$msfe)),4), " | ALPL: ", round(mean(unlist(msfe_bvar_minnesota$alpl)))," | MSD: ", round(msd_bvar_minnesota,6), "\n", sep=""))
bvar_result = list("msfe_bvar_minnesota" = msfe_bvar_minnesota,
"msd_bvar_minnesota" = msd_bvar_minnesota)
run = 14
m = 5
M = 5
T = 200
train <- T+1-50
number_of_predictions <- T - train
h_steps <- 8
p <- 1
y_dgp <- read.csv(paste("../simulations/datasets/",paste('y',M,T,p,run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
x_dgp <- read.csv(paste("../simulations/datasets/",paste('x',M,T,p,run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
coeff <- read.csv(paste("../simulations/datasets/",paste('coefficients',M,T,p,run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
plot(y_dgp)
ploy(y_dgp[,1])
plot(y_dgp[,1])
T = 200
train <- T+1-50
number_of_predictions <- T - train
h_steps <- 8
p <- 1
y_dgp <- read.csv(paste("../simulations/datasets/",paste('y',M,T,p,'0.10',run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
x_dgp <- read.csv(paste("../simulations/datasets/",paste('x',M,T,p,'0.10',run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
coeff <- read.csv(paste("../simulations/datasets/",paste('coefficients',M,T,p,'0.10',run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
T = 200
train <- T+1-50
number_of_predictions <- T - train
h_steps <- 8
p <- 1
y_dgp <- read.csv(paste("../simulations/datasets/",paste('y',M,T,p,'0.1',run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
x_dgp <- read.csv(paste("../simulations/datasets/",paste('x',M,T,p,'0.1',run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
coeff <- read.csv(paste("../simulations/datasets/",paste('coefficients',M,T,p,'0.1',run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
T = 200
train <- T+1-50
number_of_predictions <- T - train
h_steps <- 8
p <- 1
y_dgp <- read.csv(paste("../simulations/datasets/",paste('y', M, T, p, sparsity, run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
x_dgp <- read.csv(paste("../simulations/datasets/",paste('x', M, T, p, sparsity, run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
coeff <- read.csv(paste("../simulations/datasets/",paste('coefficients', M, T, p, sparsity, run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
simulation_run <- function(run, M, mcmc_iter, sparsity=0.1) {
T = 200
train <- T+1-50
number_of_predictions <- T - train
h_steps <- 8
p <- 1
y_dgp <- read.csv(paste("../simulations/datasets/",paste('y', M, T, p, sparsity, run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
x_dgp <- read.csv(paste("../simulations/datasets/",paste('x', M, T, p, sparsity, run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
coeff <- read.csv(paste("../simulations/datasets/",paste('coefficients', M, T, p, sparsity, run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
# Minimal error handling is necessary due to possible initialization failures for priors in the Bayesian models. OLS based models shouldn't error out.
# However, as a precaution and in the name of consistency, error handling is also set up for these models.
var_result <- tryCatch({
## VAR-OLS ##
start_time = proc.time()
msfe_var_ols <- var_ols(T, M, p, train, y_dgp, h_steps)
msd_var_ols <- var_ols_msd(T, M, p, y_dgp, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","VAR -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_var_ols$msfe)),4)," | ALPL: ", round(mean(unlist(msfe_var_ols$alpl))), " | MSD: ", round(msd_var_ols,6), "\n", sep=""))
var_result = list("msfe_var_ols" = msfe_var_ols,
"msd_var_ols" = msd_var_ols)
}, error = function(err) {
var_result = invalid_result(model="var_ols", h_steps)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","VAR -> ERROR!" ))
})
bvar_result = tryCatch({
## B-VAR with Minnesota prior ##
start_time = proc.time()
msfe_bvar_minnesota <- bvar_minnesota(T, M, p, train, y_dgp, x_dgp, mcmc_iter, h_steps)
msd_bvar_minnesota <- bvar_minnesota_msd(T, M, p, y_dgp, mcmc_iter, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_bvar_minnesota$msfe)),4), " | ALPL: ", round(mean(unlist(msfe_bvar_minnesota$alpl)))," | MSD: ", round(msd_bvar_minnesota,6), "\n", sep=""))
bvar_result = list("msfe_bvar_minnesota" = msfe_bvar_minnesota,
"msd_bvar_minnesota" = msd_bvar_minnesota)
}, error = function(err) {
bvar_result = invalid_result(model="bvar_minnesota", h_steps)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> ERROR!"))
})
arx_result = tryCatch({
## ARX with OLS ##
start_time = proc.time()
msfe_arx_ols <- arx_ols(T, M, p, train, y_dgp, x_dgp, h_steps)
msd_arx_ols <- arx_ols_msd(T, M, p, y_dgp, x_dgp, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","AR-X -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_arx_ols$msfe)),4)," | ALPL: ", round(mean(unlist(msfe_arx_ols$alpl))), " | MSD: ", round(msd_arx_ols,6), "\n", sep=""))
arx_result = list("msfe_arx_ols" = msfe_arx_ols,
"msd_arx_ols" = msd_arx_ols)
}, error = function(err) {
arx_result = invalid_result(model="arx_ols", h_steps)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","AR-X -> ERROR!"))
})
tvp_bar_result = tryCatch({
## TVP-B-AR with Minnesota prior ##
start_time = proc.time()
msfe_tvp_bar <- tvp_bar(T, M, p, train, y_dgp, x_dgp, mcmc_iter, h_steps)
msd_tvp_bar <- tvp_bar_msd(T, M, p, y_dgp, x_dgp, mcmc_iter, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","TVP-B-AR -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_tvp_bar$msfe)),4)," | ALPL: ", round(mean(unlist(msfe_tvp_bar$alpl))), " | MSD: ", round(msd_tvp_bar,6), "\n", sep=""))
tvp_bar_result = list("msfe_tvp_bar" = msfe_tvp_bar,
"msd_tvp_bar" = msd_tvp_bar)
}, error = function(err) {
tvp_bar_result = invalid_result(model="tvp_bar", h_steps)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","TVP-B-AR -> ERROR!"))
})
result_list <- list("msfe_var_ols" = var_result$msfe_var_ols$msfe,
"alpl_var_ols" = var_result$msfe_var_ols$alpl,
"msfe_bvar_minnesota" = bvar_result$msfe_bvar_minnesota$msfe,
"alpl_bvar_minnesota" = bvar_result$msfe_bvar_minnesota$alpl,
"msfe_arx_ols" = arx_result$msfe_arx_ols$msfe,
"alpl_arx_ols" = arx_result$msfe_arx_ols$alpl,
"msfe_tvp_bar" = tvp_bar_result$msfe_tvp_bar$msfe,
"alpl_tvp_bar" = tvp_bar$result$msfe_tvp_bar$alpl,
"msd_var_ols" = var_result$msd_var_ols,
"msd_bvar_minnesota" = bvar_result$msd_bvar_minnesota,
"msd_arx_ols" = arx_result$msd_arx_ols,
"msd_tvp_bar" = tvp_bar_result$msd_tvp_bar)
return(result_list)
}
simulation_run(1,2,1000)
T = 200
train <- T+1-50
number_of_predictions <- T - train
h_steps <- 8
p <- 1
y_dgp <- read.csv(paste("../simulations/datasets/",paste('y', M, T, p, sparsity, run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
x_dgp <- read.csv(paste("../simulations/datasets/",paste('x', M, T, p, sparsity, run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
coeff <- read.csv(paste("../simulations/datasets/",paste('coefficients', M, T, p, sparsity, run, 'het',sep="_"),'.csv', sep=""), header=FALSE)
# Minimal error handling is necessary due to possible initialization failures for priors in the Bayesian models. OLS based models shouldn't error out.
# However, as a precaution and in the name of consistency, error handling is also set up for these models.
var_result <- tryCatch({
## VAR-OLS ##
start_time = proc.time()
msfe_var_ols <- var_ols(T, M, p, train, y_dgp, h_steps)
msd_var_ols <- var_ols_msd(T, M, p, y_dgp, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","VAR -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_var_ols$msfe)),4)," | ALPL: ", round(mean(unlist(msfe_var_ols$alpl))), " | MSD: ", round(msd_var_ols,6), "\n", sep=""))
var_result = list("msfe_var_ols" = msfe_var_ols,
"msd_var_ols" = msd_var_ols)
}, error = function(err) {
var_result = invalid_result(model="var_ols", h_steps)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","VAR -> ERROR!" ))
})
bvar_result = tryCatch({
## B-VAR with Minnesota prior ##
start_time = proc.time()
msfe_bvar_minnesota <- bvar_minnesota(T, M, p, train, y_dgp, x_dgp, mcmc_iter, h_steps)
msd_bvar_minnesota <- bvar_minnesota_msd(T, M, p, y_dgp, mcmc_iter, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_bvar_minnesota$msfe)),4), " | ALPL: ", round(mean(unlist(msfe_bvar_minnesota$alpl)))," | MSD: ", round(msd_bvar_minnesota,6), "\n", sep=""))
bvar_result = list("msfe_bvar_minnesota" = msfe_bvar_minnesota,
"msd_bvar_minnesota" = msd_bvar_minnesota)
}, error = function(err) {
bvar_result = invalid_result(model="bvar_minnesota", h_steps)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","BVAR -> ERROR!"))
})
arx_result = tryCatch({
## ARX with OLS ##
start_time = proc.time()
msfe_arx_ols <- arx_ols(T, M, p, train, y_dgp, x_dgp, h_steps)
msd_arx_ols <- arx_ols_msd(T, M, p, y_dgp, x_dgp, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","AR-X -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_arx_ols$msfe)),4)," | ALPL: ", round(mean(unlist(msfe_arx_ols$alpl))), " | MSD: ", round(msd_arx_ols,6), "\n", sep=""))
arx_result = list("msfe_arx_ols" = msfe_arx_ols,
"msd_arx_ols" = msd_arx_ols)
}, error = function(err) {
arx_result = invalid_result(model="arx_ols", h_steps)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","AR-X -> ERROR!"))
})
tvp_bar_result = tryCatch({
## TVP-B-AR with Minnesota prior ##
start_time = proc.time()
msfe_tvp_bar <- tvp_bar(T, M, p, train, y_dgp, x_dgp, mcmc_iter, h_steps)
msd_tvp_bar <- tvp_bar_msd(T, M, p, y_dgp, x_dgp, mcmc_iter, coeff)
elapsed_time = round((proc.time() - start_time)[3],4)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","TVP-B-AR -> DONE! | elapsed: ", elapsed_time, ' seconds | MSFE: ',  round(mean(unlist(msfe_tvp_bar$msfe)),4)," | ALPL: ", round(mean(unlist(msfe_tvp_bar$alpl))), " | MSD: ", round(msd_tvp_bar,6), "\n", sep=""))
tvp_bar_result = list("msfe_tvp_bar" = msfe_tvp_bar,
"msd_tvp_bar" = msd_tvp_bar)
}, error = function(err) {
tvp_bar_result = invalid_result(model="tvp_bar", h_steps)
cat(paste("Run: ", run, "\t", "M: ", M, "\t","TVP-B-AR -> ERROR!"))
})
result_list <- list("msfe_var_ols" = var_result$msfe_var_ols$msfe,
"alpl_var_ols" = var_result$msfe_var_ols$alpl,
"msfe_bvar_minnesota" = bvar_result$msfe_bvar_minnesota$msfe,
"alpl_bvar_minnesota" = bvar_result$msfe_bvar_minnesota$alpl,
"msfe_arx_ols" = arx_result$msfe_arx_ols$msfe,
"alpl_arx_ols" = arx_result$msfe_arx_ols$alpl,
"msfe_tvp_bar" = tvp_bar_result$msfe_tvp_bar$msfe,
"alpl_tvp_bar" = tvp_bar$result$msfe_tvp_bar$alpl,
"msd_var_ols" = var_result$msd_var_ols,
"msd_bvar_minnesota" = bvar_result$msd_bvar_minnesota,
"msd_arx_ols" = arx_result$msd_arx_ols,
"msd_tvp_bar" = tvp_bar_result$msd_tvp_bar)
result_list <- list("msfe_var_ols" = var_result$msfe_var_ols$msfe,
"alpl_var_ols" = var_result$msfe_var_ols$alpl,
"msfe_bvar_minnesota" = bvar_result$msfe_bvar_minnesota$msfe,
"alpl_bvar_minnesota" = bvar_result$msfe_bvar_minnesota$alpl,
"msfe_arx_ols" = arx_result$msfe_arx_ols$msfe,
"alpl_arx_ols" = arx_result$msfe_arx_ols$alpl,
"msfe_tvp_bar" = tvp_bar_result$msfe_tvp_bar$msfe,
"alpl_tvp_bar" = tvp_bar_result$result$msfe_tvp_bar$alpl,
"msd_var_ols" = var_result$msd_var_ols,
"msd_bvar_minnesota" = bvar_result$msd_bvar_minnesota,
"msd_arx_ols" = arx_result$msd_arx_ols,
"msd_tvp_bar" = tvp_bar_result$msd_tvp_bar)
?bvar()
